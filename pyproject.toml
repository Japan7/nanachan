[tool.poetry]
name = "nanachan"
version = "0.1.0" # do not change that
description = "Japan7 Discord bot"
authors = [
    "mistiru <dev@mistiru.me>",
    "Pierre Jeanjean <rhiobet@gmail.com>",
    "odrling <florianbadie@odrling.xyz>",
    "NextFire <git@yuru.moe>",
]
license = "MIT"
readme = "README.md"
repository = "https://github.com/Japan7/nanachan"

[tool.poetry.scripts]
nanachan = "nanachan.__main__:main"

[tool.poetry.dependencies]
python = "~3.12"
"discord.py" = { git = "https://github.com/Japan7/discord.py.git", rev = "0888b3e2278e23c7e1d7a2a7a341fec8d47138e7", extras = ["voice"] }
matplotlib = "3.9.2"
vobject = "0.9.7"
python-socketio = { version = "5.11.4", extras = ["asyncio_client"] }
aiohttp = { version = "3.9.5", extras = ["speedups"] }
aiofiles = "24.1.0"
uvloop = "0.20.0"
pysaucenao = "1.6.2"
Pillow = "10.4.0"
html2text = "2024.2.26"
# https://github.com/PyYoshi/cChardet/issues/81
faust-cchardet = "2.1.19"
toolz = "0.12.1"
yarl = "1.12.1"
rich = "13.8.1"
pydantic = "2.9.2"
numpy = "2.1.1"
tldr = "3.3.0"
watchgod = "0.8.2"
backoff = "2.2.1"
yappi = "1.6.0"
orjson = "3.10.7"
redis = { version = "5.0.8", extras = ["hiredis"] }
parsedatetime = "2.6"
yt-dlp = "2024.8.6"
aiojobs = "1.3.0"
tzdata = "2024.2"
ollama = "0.3.3"

[tool.poetry.group.dev.dependencies]
pyright = "1.1.381"
ruff = "0.6.7"
mahou = { git = "https://github.com/Japan7/mahou.py.git", rev = "3581f0c9f6ce6dc7e272d5f760d7236fcd506fb0" }
requests = "2.32.3"
# FIXME: https://pypi.org/project/types-redis/#description
# Note: Redis-py 5.0.0 added a py.typed file, but the inline annotations are incomplete.
# Continuing to use types-redis for the time being may lead to superior results.
types-redis = "4.6.0.20240903"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.masonry.api"

[tool.pyright]
reportDeprecated = true

[tool.ruff]
target-version = "py312"
line-length = 99

[tool.ruff.lint]
select = ["E", "F", "W", "B", "SIM", "I"]
ignore = [
    # lambda expressions
    "E731",
    # ambiguous variable name
    "E741",
    # Do not perform function calls in argument defaults
    "B008",
    # Within an except clause, raise exceptions with `raise ... from err` or `raise ... from None`
    "B904",
    # `zip()` without an explicit `strict=` parameter
    "B905",
    # Use `contextlib.suppress(asyncio.CancelledError)` instead of try-except-pass
    "SIM105",
    # Use ternary operator `{contents}` instead of if-else-block
    "SIM108",
]

[tool.ruff.lint.per-file-ignores]
"nanachan/changelog.py" = ["E501"]
"nanachan/nanapi/model.py" = ["E501"]

[tool.ruff.format]
quote-style = "single"
